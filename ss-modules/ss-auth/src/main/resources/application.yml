server:
  port: 8200
  servlet:
    context-path: /

spring:
  profiles:
    active: dev
  application:
    # 应用名称
    name: ss-auth-server
  redis:
    host: 127.0.0.1
    port: 6379
    password: redhat
    database: 1
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    # jdbc_config   datasource
    url: jdbc:mysql://127.0.0.1:3306/calm?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: redhat
    # Hikari will use the above plus the following to setup connection pooling
    type: com.zaxxer.hikari.HikariDataSource
    hikari.minimum-idle: 5
    hikari.maximum-pool-size: 15
    hikari.auto-commit: true
    hikari.idle-timeout: 30000
    hikari.pool-name: DatebookHikariCP
    hikari.max-lifetime: 1800000
    hikari.connection-timeout: 30000
    hikari.connection-test-query: SELECT 1
  rabbitmq:
    host: hejinyo.cn
    port: 5672
    username: jelly
    password: jelly
    virtual-host: /jelly
    # 支持发布确认
    publisher-confirms: true
    # 支持发布返回
    publisher-returns: true
    listener:
      simple:
        acknowledge-mode: manual
        # 指定最小的消费者数量
        concurrency: 1
        # 指定最大的消费者数量
        max-concurrency: 1
        # 是否支持重试
        retry:
          enabled: true

eureka:
  client:
    service-url:
      defaultZone: http://hejinyo:password@localhost:8000/eureka
    # 缓存清单每隔30秒跟新一次
    registry-fetch-interval-seconds: 30
  instance:
    # 服务续约任务调用间隔时间，默认30秒
    lease-renewal-interval-in-seconds: 30
    # 服务失效时间，默认90秒
    lease-expiration-duration-in-seconds: 90
    # 实例使用ip进行访问
    prefer-ip-address: true
    # 实例显示id
    instance-id: ${spring.application.name}:${server.port}
    #状态页面和健康指标
    statusPageUrlPath: ${server.servlet.context-path}/actuator/info
    healthCheckUrlPath: ${server.servlet.context-path}/actuator/health

# shiro 不拦截路径
ss:
  auth:
    filter:
      anonPath:
        - /favicon.ico
        - /actuator/**
        - /test/**
      filterChainMap:
        - /test1/**;url
        - /test2/**;auth
        - /test3/**;url,auth